// ARQUIVO   : add_mod
// DESCRICAO : Adicao modular de polinomios.
// AUTOR     : Inaue Ferreira da Silva
// DATA      : 30/05/2025
// VERSAO    : 1.0
// LICENCA   : GPLv3

// Definindo polinomios

ring racionais_MCs = QQ, (x), Dp;
setring racionais_MCs;

// DESCRICAO    : Divisao euclidiana de polinomios.
// PARAMETRO p1	: polinomio 1
// PARAMETRO p2	: polinomio 2
// RETORNO      : (quociente, resto)

proc divisao_euclidiana(poly p1, poly p2)
{
	poly quociente = 0;
	poly resto     = p1;
	list divisao;

	while(resto != 0 and deg(resto) >= deg(p2))
	{
		divisao   = lead(resto) / lead(p2);
		quociente = quociente + divisao[1];
		resto     = resto - divisao[1] * p2;
	}
	
	return (quociente, resto);
}

// DESCRICAO    : Adicao modular de polinomios.
// PARAMETRO p1	: polinomio 1
// PARAMETRO p2	: polinomio 2
// PARAMETRO m	: polinomio modulo
// RETORNO      : soma

proc sum_mod(poly p1, poly p2, poly m)
{
	poly soma    = p1 + p2;
	list divisao = divisao_euclidiana(soma, m);

	return (divisao[2]);
}

// Entrada

execute("poly p1 = " + read(""));
execute("poly p2 = " + read(""));
execute("poly m  = " + read(""));

// Saida

sum_mod(p1, p2, m);

quit;
