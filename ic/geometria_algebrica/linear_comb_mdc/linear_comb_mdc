// ARQUIVO   : linear_comb_mdc
// DESCRICAO : Aplicativo de expressar MDC como combinacao linear de dois polinomios
// AUTOR     : Inaue Ferreira da Silva
// DATA      : 30/05/2025
// VERSAO    : 1.0
// LICENCA   : GPLv3

// Definindo polinomios

ring racionais_MCs = QQ, (x), Dp;
setring racionais_MCs;

// DESCRICAO    : Divisao euclidiana de polinomios.
// PARAMETRO p1	: polinomio 1
// PARAMETRO p2	: polinomio 2
// RETORNO      : (quociente, resto)

proc divisao_euclidiana(poly p1, poly p2)
{
	poly quociente = 0;
	poly resto     = p1;
	list divisao;

	while(resto != 0 and deg(resto) >= deg(p2))
	{
		divisao   = lead(resto) / lead(p2);
		quociente = quociente + divisao[1];
		resto     = resto - divisao[1] * p2;
	}
	
	return (quociente, resto);
}

// DESCRICAO    : Funcao de descobrir combinacao linear do MDC.
// PARAMETRO p1	: polinomio 1
// PARAMETRO p2	: polinomio 2
// RETORNO      : (coeficiente do polinomio 1, coeficiente do polinomio 2)

proc linear_comb_mdc(poly p1, poly p2)
{
	if(p2 == 0)
	{
		return (1 / leadcoef(p1), 0);
	}

	list divisao    = divisao_euclidiana(p1, p2);
	list combinacao = linear_comb_mdc(p2, divisao[2]);

	return (combinacao[2], combinacao[1] - divisao[1] * combinacao[2]);
}

// Entrada

execute("poly p1 = " + read(""));
execute("poly p2 = " + read(""));

// Saida

linear_comb_mdc(p1, p2);

quit;
